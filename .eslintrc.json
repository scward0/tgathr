{
  "extends": [
    "next/core-web-vitals",
    "next/typescript"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": "latest",
    "sourceType": "module",
    "ecmaFeatures": {
      "jsx": true
    }
  },
  "env": {
    "browser": true,
    "es2021": true,
    "node": true,
    "jest": true
  },
  "settings": {
    "react": {
      "version": "detect"
    }
  },
  "rules": {
    // Next.js Strict rules (recommended)
    "@next/next/no-html-link-for-pages": "error",
    "@next/next/no-img-element": "error",
    "@next/next/no-unwanted-polyfillio": "error",
    "@next/next/no-page-custom-font": "error",

    // TypeScript specific rules
    "@typescript-eslint/no-unused-vars": [
      "error",
      {
        "argsIgnorePattern": "^_",
        "varsIgnorePattern": "^_",
        "caughtErrorsIgnorePattern": "^_"
      }
    ],
    "@typescript-eslint/no-explicit-any": "warn",

    // React specific rules
    "react-hooks/rules-of-hooks": "error",
    "react-hooks/exhaustive-deps": "warn",
    "react/prop-types": "off",
    "react/react-in-jsx-scope": "off",

    // General best practices
    "prefer-const": "error",
    "no-var": "error",
    "no-console": "warn",
    "eqeqeq": ["error", "always"],
    "curly": ["error", "all"],
    "no-eval": "error",
    "no-implied-eval": "error",
    "no-new-func": "error",
    "no-script-url": "error"
  },
  "overrides": [
    {
      "files": ["**/__tests__/**/*", "**/*.{test,spec}.{js,ts,jsx,tsx}"],
      "env": {
        "jest": true
      },
      "rules": {
        "@typescript-eslint/no-explicit-any": "off",
        "no-console": "off"
      }
    },
    {
      "files": ["**/*.config.{js,ts,mjs}"],
      "env": {
        "node": true
      },
      "rules": {
        "@typescript-eslint/no-require-imports": "off",
        "no-console": "off"
      }
    }
  ],
  "ignorePatterns": [
    ".next",
    "node_modules",
    "out",
    "build",
    "dist",
    "coverage",
    "playwright-report",
    "test-results",
    "*.config.js",
    "*.config.mjs",
    "prisma/migrations",
    "src/generated/**/*",
    "*.d.ts",
    "!src/**/*.d.ts",
    "**/__tests__/**/*",
    "**/*.test.*",
    "**/*.spec.*",
    "src/setupTests.ts"
  ]
}